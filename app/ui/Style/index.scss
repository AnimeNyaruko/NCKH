@tailwind base;
@tailwind components;
@tailwind utilities;

@import 'defination.module.scss';
@font-face {
	font-family: PaytoneOne;
	src: url(/fonts/PaytoneOne-Regular.ttf);
	font-weight: 400;
}

@font-face {
	font-family: Carlito;
	src: url(/fonts/Carlito-Regular.ttf);
}

@font-face {
	font-family: Roboto;
	src: url(/fonts/Roboto-Regular.ttf);
}

.paytone-one {
	font-family: PaytoneOne, sans-serif;
	.bold {
		font-weight: bold;
	}
}

.carlito {
	font-family: Carlito;
	.bold {
		font-weight: bold;
	}
}

.roboto {
	font-family: Roboto;
	.bold {
		font-weight: bold;
	}
}

.placeholder-bold::placeholder {
	font-weight: bold;
}

.botchat {
	.user:first-child {
		p {
			margin-top: 0px;
		}
	}
	.user {
		justify-self: flex-end;
		display: flex;
		> p {
			word-break: break-all;
			width: 100%;
			text-overflow: clip;

			background-color: rgb(103 232 249);

			padding: 0.5rem;

			margin-top: 1rem;
			margin-left: 2.5rem;
			margin-right: 0.5rem;

			border: 1px solid transparent;
			border-radius: 1rem;
		}
	}
	.bot {
		justify-self: flex-start;
		display: flex;
		> div {
			background-color: rgb(203 213 225);

			padding: 0.5rem;

			margin-top: 1rem;
			margin-left: 0.5rem;
			margin-right: 2rem;

			border: 1px solid transparent;
			border-radius: 1rem;
		}
		.icon {
			height: fit-content;
			aspect-ratio: 1/1;

			padding: 0.35rem;

			border: 1px transparent;
			border-radius: 100%;

			background-color: rgb(203 213 225);

			align-self: flex-end;
			justify-self: end;
		}
	}
}

@mixin animate($animation, $duration, $method, $times) {
	animation: $animation $duration $method $times;
}

@mixin keyframes($name) {
	@keyframes #{$name} {
		@content;
	}
}
/* HTML: <div class="loader"></div> */
.fallback {
	width: 50px;
	padding: 8px;
	aspect-ratio: 1;
	border-radius: 50%;
	background: #ffffff;
	--_m: conic-gradient(#0000 10%, #000), linear-gradient(#000 0 0) content-box;
	-webkit-mask: var(--_m);
	mask: var(--_m);
	-webkit-mask-composite: source-out;
	mask-composite: subtract;
	animation: l3 1s infinite linear;
}
@keyframes l3 {
	to {
		transform: rotate(1turn);
	}
}
